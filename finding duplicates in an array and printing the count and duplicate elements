import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.StringTokenizer;

public class ContainsDuplicates {
    public static void main(String[] args) {
        FastScanner sc = new FastScanner(System.in);
        int n = sc.nextInt();
        int[] testArray = new int[n];
        for(int i = 0; i < n; i++){
            testArray[i] = sc.nextInt();
        }

        System.out.println(duplicates(testArray));

    }

    public static boolean duplicates(int[] arr){
        int count = 0;
        HashSet<Integer> set = new HashSet<>();
        boolean result = false;
        for(int i = 0; i < arr.length; i++){
            for(int j = 0; j < arr.length; j++){
                if(i != j && arr[i] == arr[j]){
                    count++;
                    if(!set.contains(arr[i])){
                        set.add(arr[i]);
                    }
                    result = true;
                }
            }
        }

        System.out.println("Total count of duplicates: " + set.size());
        System.out.println("Duplicate numbers are : " + set.toString());
        return result;
    }

    static class FastScanner{
        BufferedReader br;
        StringTokenizer st;

        public FastScanner(InputStream stream){
            try{
                br = new BufferedReader(new InputStreamReader(stream));
            } catch(Exception e){
                e.printStackTrace();
            }
        }

        String next(){
            while(st == null || !st.hasMoreTokens()){
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (Exception e){
                    e.printStackTrace();
                }
            }

            return st.nextToken();
        }

        int nextInt(){
            return Integer.parseInt(next());
        }
    }
}
