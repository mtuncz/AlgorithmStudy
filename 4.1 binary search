import java.util.Arrays;
import java.util.Scanner;

public class BinarySearch {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] firstArray = new int[n];
        for(int i = 0; i < n; i++){
            firstArray[i] = sc.nextInt();
        }

        int k = sc.nextInt();
        int[] secondArray = new int[k];
        for(int i = 0; i < k; i++){
            secondArray[i] = sc.nextInt();
        }
        Arrays.sort(firstArray);
        findIndex(secondArray, firstArray);




    }

    public static int binarySearch(int[] arr, int low, int high, int key){
        System.out.println("Low is - > " + low + " high is - > " + high);
        if(high < low){
            return -1;
        }

        int mid = low + ((high-low)/2);

        if(arr[mid] == key){
            return mid;
        } else if(arr[mid] > key){
            return binarySearch(arr,low, mid-1, key);
        } else {
            return binarySearch(arr, mid+1, high, key);
        }

    }

    public static int binarySearch(int[] arr, int key){
        int low = 0;
        int high = arr.length-1;

        while(low <= high){
            //System.out.println("low - > " + low + " high - > " + high);
            int mid = (low+high)/2;
            if(arr[mid] == key){
                return mid;
            } else if(key < arr[mid]){
                high = mid-1;
            } else {
                low = mid +1;
            }
        }

        return -1;
    }

    public static void findIndex(int[] originalArray, int[] searchArray){

        for(int i = 0; i < originalArray.length; i++){
            int idx = binarySearch(searchArray, originalArray[i]);
            System.out.print(idx + " ");
        }

    }
}
