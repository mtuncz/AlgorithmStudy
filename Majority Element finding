import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Scanner;
import java.util.StringTokenizer;

public class MajorityElement {
    public static void main(String[] args) {
        FastScanner sc = new FastScanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for(int i = 0; i < n; i++){
            a[i] = sc.nextInt();
        }

        System.out.println(result(a));




    }

    public static int result(int[] data){
        int res = bm_maj(data);
        if(res != Integer.MIN_VALUE){
            return 1;
        } else {
            return 0;
        }
    }
    
    static int bm_maj(int[] data){
        int result = Integer.MIN_VALUE;
        int count = 0;
        for(int d : data){
            if(count == 0){
                result = d;
                count = 1;
            } else if (d == result){
                count++;
            } else {
                count--;
            }
        }

        count = 0;
        for(int d : data){
            if(d == result){
                count++;
                if(count > data.length/2){
                    return result;
                }
            }
        }

        return Integer.MIN_VALUE;
    }



    static class FastScanner {
        BufferedReader br;
        StringTokenizer st;

        FastScanner(InputStream stream){
            try {
                br = new BufferedReader(new InputStreamReader(stream));
            } catch (Exception e){
                e.printStackTrace();
            }
        }

        String next(){
            while(st == null || !st.hasMoreTokens()){
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e){
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt(){
            return Integer.parseInt(next());
        }
    }

}
